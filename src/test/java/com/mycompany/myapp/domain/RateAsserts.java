package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RateAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRateAllPropertiesEquals(Rate expected, Rate actual) {
        assertRateAutoGeneratedPropertiesEquals(expected, actual);
        assertRateAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRateAllUpdatablePropertiesEquals(Rate expected, Rate actual) {
        assertRateUpdatableFieldsEquals(expected, actual);
        assertRateUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRateAutoGeneratedPropertiesEquals(Rate expected, Rate actual) {
        assertThat(expected)
            .as("Verify Rate auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRateUpdatableFieldsEquals(Rate expected, Rate actual) {
        assertThat(expected)
            .as("Verify Rate relevant properties")
            .satisfies(e -> assertThat(e.getRateID()).as("check rateID").isEqualTo(actual.getRateID()))
            .satisfies(e -> assertThat(e.getTimeOfDay()).as("check timeOfDay").isEqualTo(actual.getTimeOfDay()))
            .satisfies(e -> assertThat(e.getVehicleSize()).as("check vehicleSize").isEqualTo(actual.getVehicleSize()))
            .satisfies(e -> assertThat(e.getBaseRate()).as("check baseRate").isEqualTo(actual.getBaseRate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRateUpdatableRelationshipsEquals(Rate expected, Rate actual) {}
}
