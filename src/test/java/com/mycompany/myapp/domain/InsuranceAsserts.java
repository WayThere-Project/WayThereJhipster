package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class InsuranceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceAllPropertiesEquals(Insurance expected, Insurance actual) {
        assertInsuranceAutoGeneratedPropertiesEquals(expected, actual);
        assertInsuranceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceAllUpdatablePropertiesEquals(Insurance expected, Insurance actual) {
        assertInsuranceUpdatableFieldsEquals(expected, actual);
        assertInsuranceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceAutoGeneratedPropertiesEquals(Insurance expected, Insurance actual) {
        assertThat(expected)
            .as("Verify Insurance auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceUpdatableFieldsEquals(Insurance expected, Insurance actual) {
        assertThat(expected)
            .as("Verify Insurance relevant properties")
            .satisfies(e -> assertThat(e.getInsID()).as("check insID").isEqualTo(actual.getInsID()))
            .satisfies(e -> assertThat(e.getInsDescription()).as("check insDescription").isEqualTo(actual.getInsDescription()))
            .satisfies(e -> assertThat(e.getStartDate()).as("check startDate").isEqualTo(actual.getStartDate()))
            .satisfies(e -> assertThat(e.getExpirationDate()).as("check expirationDate").isEqualTo(actual.getExpirationDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertInsuranceUpdatableRelationshipsEquals(Insurance expected, Insurance actual) {}
}
